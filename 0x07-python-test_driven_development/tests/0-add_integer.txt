The ``0-add_integer`` module
=============================

Using ``add_integer`` 
---------------------

This is a function that adds 2 integers.

We import the add_integer from the module:

```python
	>>>add_integer = __import__('0-add_integer').add_integer

Adding 1 and 2
	>>>add_integer(1, 2)
	3

Adding 100 and -2
	>>>add_integer(100, -2)	
	98

Adding 2
	>>>add_integer(2)
	100

Adding 100.3 and -2:
	>>>add_integer(100.3, -2)
	98

Adding an integer to a string
	>>>add_integer(4, "School")
	Traceback (most recent call last):
		...
	TypeError : b must be an integer

Adding None
	>>>add_integer(None)
	Traceback (most recent call last): 
		...
	TypeError: a must be an integer

Adding a string to an integer
	>>>add_integer("Lad", 5)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding a string to a string
	>>>add_integer("Lad", "5")
	Traceback (most recent call last):
		...	
	TypeError: a must be an integer	

Adding a tuple 
	>>>add_integer((2,1))
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding a boolean 
	>>>add_integer(True)
	Traceback( most recent call last):
		...
	TypeError: a must be an integer

Adding a set 
	>>>add_integer({1,"banana", 3})
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding a list 
	>>>add_integer([8, 2, 4])
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding a binary type
	>>>add_integer(b'hello')
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding a dictionary
 	>>>add_integer({"Name":"John", "age":69, "location":["Nairobi", "Kenya"]}
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding two float numbers
	>>>(2.1, 47.0910909)
	Traceback (most recent call last):
		...
	TypeError: a must beÂ anÂ integer

Adding a negative number
	>>>add_integer(-87)
	11
